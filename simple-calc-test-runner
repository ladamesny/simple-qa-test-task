#!/usr/bin/env python3
import argparse
import subprocess
import os
import datetime

def run_tests(test_type, reports_dir, logs_dir):
    if test_type == "unittests":
        command = ["./gradlew", "test"]  # replace with your unit test command
    elif test_type == "scenarios":
        command = ["./gradlew", "cucumber"]  # replace with your BDD test command
    else:
        print(f"Invalid test type: {test_type}")
        return

    # Create directories if they don't exist
    os.makedirs(reports_dir, exist_ok=True)
    os.makedirs(logs_dir, exist_ok=True)

    # Run the command and capture stdout and stderr
    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout, stderr = process.communicate()

    # Save stdout and stderr to logs and print them
    timestamp = datetime.datetime.now().strftime("%Y%m%d%H%M%S")
    with open(os.path.join(logs_dir, f"{test_type}_stdout_{timestamp}.log"), "w") as f:
        stdout_decoded = stdout.decode()
        print(stdout_decoded)
        f.write(stdout_decoded)
    with open(os.path.join(logs_dir, f"{test_type}_stderr_{timestamp}.log"), "w") as f:
        stderr_decoded = stderr.decode()
        print(stderr_decoded)
        f.write(stderr_decoded)

    # Save reports
    report_command = ["cp", "-r", "./build/reports/tests/test", reports_dir]  # replace with your report generation command
    subprocess.run(report_command)

def main():
    parser = argparse.ArgumentParser(description="Run tests for Simple Calculator")
    parser.add_argument("--run", choices=["unittests", "scenarios"], required=True, help="Type of tests to run")
    parser.add_argument("--reports-dir", default="./reports", help="Directory to save reports")
    args = parser.parse_args()

    logs_dir = "./logs"
    run_tests(args.run, args.reports_dir, logs_dir)

if __name__ == "__main__":
    main()